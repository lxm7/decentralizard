user nginx;
pid /var/run/nginx.pid;
worker_processes auto;
events {
  worker_connections 1024;
}

http {
  log_format json_combined escape=json
    '{'
      '"request_id":"$request_id",'
      '"host":"$host",'
      '"time":"$time_iso8601",'
      '"x_forwarded_for":"$http_x_forwarded_for",'
      '"remote_addr":"$remote_addr",'
      '"remote_user":"$remote_user",'
      '"request":"$request",'
      '"status": "$status",'
      '"body_bytes_sent":"$body_bytes_sent",'
      '"http_referrer":"$http_referer",'
      '"http_user_agent":"$http_user_agent",'
      '"request_time":"$request_time"'
    '}';

  access_log /var/log/nginx/access.log json_combined;
  error_log  /var/log/nginx/error.log warn;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 65;

  proxy_set_header X-Request-Id $request_id;

  add_header X-Request-Id $request_id;
  add_header X-Request-Time $request_time;

  # Security headers (applied to all locations)
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-Frame-Options "DENY" always;

  limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    http2 on;

    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;

    # --- SSL Configuration Cloudflare ---
    # ssl_ciphers  HIGH:!aNULL:!MD5;
    # ssl_prefer_server_ciphers  on;

    # ssl_certificate /certs/decentralizard.cert.pem;
    # ssl_certificate_key /certs/decentralizard.key.pem;

    # --- SSL Configuration Letsencrypt (so it can fucking renew) ---
    ssl_certificate /etc/letsencrypt/live/decentralizard.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/decentralizard.com/privkey.pem;

    # --- Include recommended SSL parameters (important!) ---
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # --- Cloudflare Origin Pull ---
    ssl_verify_client on;
    ssl_client_certificate /etc/nginx/certs/authenticated_origin_pull_ca.pem;

    listen 80;

    location / {
      client_max_body_size 1M;

      proxy_pass http://app:3000;

      # Specific proxy settings
      # proxy_set_header Host $host;
      # proxy_set_header X-Real-IP $remote_addr;
      # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /health {
      access_log off;
      return 200 'OK';
      add_header Content-Type text/plain;
    }
  }
}