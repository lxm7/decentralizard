user nginx;
pid /var/run/nginx.pid;
worker_processes auto;
events {
  worker_connections 1024;
}

http {
  resolver 127.0.0.11 valid=10s;
  
  log_format json_combined escape=json
    '{'
      '"request_id":"$request_id",'
      '"host":"$host",'
      '"time":"$time_iso8601",'
      '"x_forwarded_for":"$http_x_forwarded_for",'
      '"remote_addr":"$remote_addr",'
      '"remote_user":"$remote_user",'
      '"request":"$request",'
      '"status": "$status",'
      '"body_bytes_sent":"$body_bytes_sent",'
      '"http_referrer":"$http_referer",'
      '"http_user_agent":"$http_user_agent",'
      '"request_time":"$request_time"'
    '}';

  access_log /var/log/nginx/access.log json_combined;
  error_log  /var/log/nginx/error.log warn;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  sendfile on;
  keepalive_timeout 65;

  # Global proxy settings
  proxy_set_header X-Request-Id $request_id;

  # HTTPS Server
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;
    ssl_ciphers          HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    ssl_certificate /certs/decentralizard.cert.pem;
    ssl_certificate_key /certs/decentralizard.key.pem;
    ssl_client_certificate /etc/nginx/certs/authenticated_origin_pull_ca.pem;
    ssl_verify_client on;

    location / {
      client_max_body_size 1M;
      proxy_pass http://app;
      
      # Client response headers
      add_header X-Request-Id $request_id;
      add_header X-Request-Time $request_time;
      add_header X-Content-Type-Options nosniff;
      add_header X-Frame-Options DENY;
    }
  }

  # HTTP Server
  server {
    listen 80;
    listen [::]:80;

    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/s;

    location / {
      limit_req zone=api_limit burst=200;

      client_max_body_size 1M;
      proxy_pass http://app;
      
      # Client response headers
      add_header X-Request-Id $request_id;
      add_header X-Request-Time $request_time;
    }

    location /health {
      access_log off;
      return 200 'OK';
      add_header Content-Type text/plain;
    }
  }
}