name: Push to main
on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
      SUPABASE_PROJECT_ID: xqhhhtucxbbnapliboaa

    steps:
      - name: Get Runner IP
        id: ip
        run: |
          RUNNER_IP=$(curl -s https://ipinfo.io/ip)
          echo "Runner IP: $RUNNER_IP"
          echo "ip_address=$RUNNER_IP" >> $GITHUB_OUTPUT

      - name: Whitelist Runner IP in Supabase
        run: |
          curl -X POST "https://api.supabase.com/v1/projects/${SUPABASE_PROJECT_ID}/network-restrictions" \
            -H "Authorization: Bearer ${{ secrets.NEXT_PUBLIC_SUPABASE_SERVICE_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "cidr": "${{ steps.ip.outputs.ip_address }}/32",
              "description": "GitHub Actions Runner"
            }'

      - name: Checkout
        uses: actions/checkout@v4
        # env:
        #   NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        #   SUPABASE_SERVICE_ROLE_SECRET: ${{ secrets.NEXT_PUBLIC_SUPABASE_SERVICE_KEY }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-buildx-${{ hashFiles('yarn.lock') }} # Updated key
          restore-keys: docker-buildx-

      - name: Prepare SSH key
        run: |
          echo "${{ secrets.VPS_SSH_DEPLOY }}" | base64 -d > vps_key.pem
          chmod 0600 vps_key.pem

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image using local context
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.production
          push: true
          tags: decentralizard/app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Prepare the known_hosts
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.VPS_SSH_HOST_KEYS }}" | base64 -d >> ~/.ssh/known_hosts
