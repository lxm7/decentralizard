# syntax=docker/dockerfile:1.4

FROM node:20.16.0-bookworm-slim AS base

# Stage 1: Dependencies
FROM base AS deps
RUN corepack enable
WORKDIR /app

COPY package.json yarn.lock .yarnrc.yml ./
COPY .yarn/releases ./.yarn/releases

RUN --mount=type=cache,target=/app/.yarn/cache,uid=1001,gid=1001 \
    YARN_ENABLE_IMMUTABLE_INSTALLS=1 \
    yarn install --immutable

# Stage 2: Builder
FROM deps AS builder
COPY --chown=node:node . .
RUN yarn build

# Stage 3: Production
FROM base AS production
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# User and group setup
RUN corepack enable && \
    groupadd --gid 1001 nodejs && \
    groupadd -r certaccess && \
    useradd --uid 1001 \
      --create-home \
      --shell /bin/bash \
      --groups nodejs,certaccess \
      nextjs

WORKDIR /app

# Directory structure with correct ownership
RUN mkdir -p /app/.next /app/public /app/certs && \
    chown -R nextjs:nodejs /app && \
    chmod 755 /app/certs

# Certificate handling
RUN --mount=type=secret,id=cacert,dst=/tmp/prod-ca-2021.crt \
    cp /tmp/prod-ca-2021.crt /app/certs/ && \
    chown root:certaccess /app/certs/prod-ca-2021.crt && \
    chmod 640 /app/certs/prod-ca-2021.crt

# Application files
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=deps --chown=nextjs:nodejs /app/package.json /app/yarn.lock /app/.yarnrc.yml ./
COPY --from=deps --chown=nextjs:nodejs /app/.yarn ./.yarn

# Production dependencies
RUN --mount=type=cache,target=/app/.yarn/cache,uid=1001,gid=1001 \
    YARN_ENABLE_IMMUTABLE_INSTALLS=1 \
    yarn workspaces focus --production

# Healthcheck
RUN curl -o /usr/local/bin/wait-for-it \
    https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh && \
    chmod +x /usr/local/bin/wait-for-it

# Runtime config
ENV NODE_ENV=production \
    NEXT_TELEMETRY_DISABLED=1 \
    PORT=3000

EXPOSE 3000
USER nextjs:certaccess

CMD ["yarn", "start"]