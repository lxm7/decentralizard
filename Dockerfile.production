# syntax=docker/dockerfile:1.4

# The base image
FROM node:20.16.0-bookworm-slim AS base

# The "dependencies" stage
FROM base AS deps
RUN corepack enable
WORKDIR /app

# Copy only essential package management files
COPY package.json yarn.lock .yarnrc.yml ./
COPY .yarn/releases ./.yarn/releases
# COPY .yarn/plugins ./.yarn/plugins

# Install dependencies with BuildKit cache
RUN --mount=type=cache,target=/app/.yarn/cache,uid=1001,gid=1001 \
    YARN_ENABLE_IMMUTABLE_INSTALLS=1 \
    yarn install --immutable

# The "builder" stage
FROM deps AS builder

# Use mock/stub API during build
ENV NEXT_PUBLIC_SUPABASE_URL=http://localhost:8000/mock
ENV NEXT_PUBLIC_SUPABASE_KEY=mock_key

COPY --chown=node:node . .
RUN yarn build

# The final production image
FROM base AS production
# Install system dependencies for healthchecks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Corepack and user setup
RUN corepack enable && \
    groupadd --gid 1001 nodejs && \
    useradd --uid 1001 --create-home --shell /bin/bash --groups nodejs nextjs

WORKDIR /app

# Directory structure setup
RUN mkdir -p /app/.next /app/public && \
    chown -R nextjs:nodejs /app

# Copy built artifacts and dependencies
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder --chown=nextjs:nodejs /app/public ./public
COPY --from=deps --chown=nextjs:nodejs /app/package.json /app/yarn.lock /app/.yarnrc.yml ./
COPY --from=deps --chown=nextjs:nodejs /app/.yarn ./.yarn

# Install production dependencies only
RUN --mount=type=cache,target=/app/.yarn/cache,uid=1001,gid=1001 \
    YARN_ENABLE_IMMUTABLE_INSTALLS=1 \
    yarn workspaces focus --production

# Healthcheck utilities
RUN curl -o /usr/local/bin/wait-for-it \
    https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh && \
    chmod +x /usr/local/bin/wait-for-it

# Runtime configuration
ENV NODE_ENV=production \
    NEXT_TELEMETRY_DISABLED=1 \
    PORT=3000

EXPOSE 3000
USER nextjs:nodejs

CMD ["yarn", "start"]