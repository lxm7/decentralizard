services:
  db:
    container_name: supabase-db
    image: supabase/postgres:15.8.1.020
    restart: unless-stopped
    networks:
      - supabase-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # https://github.com/supabase/supabase/tree/master/docker/volumes/db
      - ./volumes/db:/docker-entrypoint-initdb.d
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_USER: postgres
      POSTGRES_HOST: /var/run/postgresql
      PGPORT: ${POSTGRES_PORT}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ['CMD', '-c', 'pg_isready -U postgres -d postgres']
      interval: 2s
      timeout: 2s
      retries: 30 # Give more time for init
      start_period: 10s
    command:
      ['postgres', '-c', 'config_file=/etc/postgresql/postgresql.conf', '-c', 'listen_addresses=*']
  supabase-auth:
    image: supabase/gotrue:v2.167.0
    container_name: supabase-auth
    restart: unless-stopped
    environment:
      GOTRUE_JWT_SECRET: supersecretkey
      GOTRUE_JWT_EXP: ${JWT_EXPIRY}
      GOTRUE_API_HOST: 0.0.0.0
      GOTRUE_API_PORT: 9999
      API_EXTERNAL_URL: http://localhost:9999
      GOTRUE_DB_DRIVER: postgres
      GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:${AUTH_ADMIN_PASSWORD}@db:5432/postgres?connect_timeout=10
      GOTRUE_SITE_URL: http://localhost:3000
      GOTRUE_URI_ALLOW_LIST: ${ADDITIONAL_REDIRECT_URLS}
      GOTRUE_DISABLE_SIGNUP: ${DISABLE_SIGNUP}
      GOTRUE_JWT_ADMIN_ROLES: service_role
      GOTRUE_JWT_AUD: authenticated
      GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
      GOTRUE_EXTERNAL_EMAIL_ENABLED: ${ENABLE_EMAIL_SIGNUP}
      GOTRUE_EXTERNAL_ANONYMOUS_USERS_ENABLED: ${ENABLE_ANONYMOUS_USERS}
      GOTRUE_MAILER_AUTOCONFIRM: ${ENABLE_EMAIL_AUTOCONFIRM}
      GOTRUE_SMTP_ADMIN_EMAIL: ${SMTP_ADMIN_EMAIL}
      GOTRUE_SMTP_HOST: ${SMTP_HOST}
      GOTRUE_SMTP_PORT: ${SMTP_PORT}
      GOTRUE_SMTP_USER: ${SMTP_USER}
      GOTRUE_SMTP_PASS: ${SMTP_PASS}
      GOTRUE_SMTP_SENDER_NAME: ${SMTP_SENDER_NAME}
      GOTRUE_MAILER_URLPATHS_INVITE: ${MAILER_URLPATHS_INVITE}
      GOTRUE_MAILER_URLPATHS_CONFIRMATION: ${MAILER_URLPATHS_CONFIRMATION}
      GOTRUE_MAILER_URLPATHS_RECOVERY: ${MAILER_URLPATHS_RECOVERY}
      GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: ${MAILER_URLPATHS_EMAIL_CHANGE}
      GOTRUE_EXTERNAL_PHONE_ENABLED: ${ENABLE_PHONE_SIGNUP}
      GOTRUE_SMS_AUTOCONFIRM: ${ENABLE_PHONE_AUTOCONFIRM}
      GOTRUE_DB_CONNECT_RETRIES: 15 # Add this
      GOTRUE_DB_CONNECT_TIMEOUT: 5 # Seconds
    depends_on:
      db:
        condition: service_healthy
    networks:
      - supabase-network
        # analytics:
        #   condition: service_healthy

  supabase-rest:
    image: postgrest/postgrest:v12.2.0
    container_name: supabase-rest
    restart: unless-stopped
    environment:
      PGRST_DB_URI: postgres://authenticator:${AUTHENTICATOR_PASSWORD}@db:5432/postgres
      PGRST_DB_ANON_ROLE: anon
      PGRST_JWT_SECRET: supersecretkey
      PGRST_DB_USE_LEGACY_GUCS: 'false'
      PGRST_APP_SETTINGS_JWT_SECRET: supersecretkey
      PGRST_APP_SETTINGS_JWT_EXP: ${JWT_EXPIRY}
      PGRST_DB_SCHEMAS: 'public,storage,graphql_public'
      PGRST_DB_EXTRA_SEARCH_PATH: 'public,extensions'
      PGRST_JWT_AUD: 'authenticated'
      PGRST_OPENAPI_SERVER_PROXY_URI: 'http://localhost:3000'
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '3001:3000' # Changed to avoid port conflict

  supabase-realtime:
    image: supabase/realtime:v2.33.70
    container_name: supabase-realtime
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_USER: authenticator
      DB_PASSWORD: ${AUTHENTICATOR_PASSWORD}
      DB_NAME: postgres
      PORT: 4000
      JWT_SECRET: supersecretkey
      DB_SCHEMA: public
      RLIMIT_NOFILE: '10000'
      SECRET_KEY_BASE: ${SECRET_KEY_BASE}
      APP_NAME: realtime
      DB_EXTENSIONS: 'pg_cron,pg_net,pg_stat_statements,pg_hint_plan'
      SLOT_NAME: supabase_realtime_replication_slot
      REPLICATION_MODE: logical
      REPLICATION_USER: supabase_realtime_admin
      REPLICATION_PASSWORD: ${REPLICATION_PASSWORD}
      REPLICATION_HOST: db
      REPLICATION_PORT: 5432
      DB_CONNECT_TIMEOUT: 15 # Add this
      DB_RECONNECT_INTERVAL: 2
      DB_SSLMODE: disable
    networks:
      - supabase-network
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '4000:4000'

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: main-app
    volumes:
      - 'app_build:/app/.next'
      - './:/app'
      - '/app/node_modules'
    ports:
      - '3000:3000'
    command: sh -c 'export HOSTNAME="0.0.0.0" && yarn dev'
    restart: always
    environment:
      NODE_ENV: development
      WATCHPACK_POLLING: 'true'
      DATABASE_URI: postgres://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
    depends_on:
      db:
        condition: service_healthy
      seeder:
        condition: service_completed_successfully

  seeder:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: seeder
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URI: postgres://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
      # Add other necessary environment variables
    command: sh -c "yarn migrate && yarn seed"
    restart: 'no'

networks:
  supabase-network:
    driver: bridge
    attachable: true

volumes:
  # db-config:
  app_build: {}
  postgres_data: {}
